ARM GAS  /tmp/cciHSaAV.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 2
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"Blink.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Blink.cpp"
  19              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  20              		.align	1
  21              		.p2align 2,,3
  22              		.weak	_ZN5daisy9DaisySeedD2Ev
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	_ZN5daisy9DaisySeedD2Ev:
  28              	.LVL0:
  29              	.LFB2449:
  30              		.file 2 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  31              		.loc 2 22 5 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		@ link register save eliminated.
  36              	.LBB143:
ARM GAS  /tmp/cciHSaAV.s 			page 2


  37              	.LBI143:
  38              		.file 3 "../libDaisy/src/dev/codec_ak4556.h"
   1:../libDaisy/src/dev/codec_ak4556.h **** #pragma once
   2:../libDaisy/src/dev/codec_ak4556.h **** #ifndef DSY_CODEC_AK4556_H
   3:../libDaisy/src/dev/codec_ak4556.h **** #define DSY_CODEC_AK4556_H
   4:../libDaisy/src/dev/codec_ak4556.h **** 
   5:../libDaisy/src/dev/codec_ak4556.h **** #include "daisy_core.h"
   6:../libDaisy/src/dev/codec_ak4556.h **** #include "per/gpio.h"
   7:../libDaisy/src/dev/codec_ak4556.h **** 
   8:../libDaisy/src/dev/codec_ak4556.h **** namespace daisy
   9:../libDaisy/src/dev/codec_ak4556.h **** {
  10:../libDaisy/src/dev/codec_ak4556.h **** /** @brief Ak4556 Codec support 
  11:../libDaisy/src/dev/codec_ak4556.h ****  ** @author shensley
  12:../libDaisy/src/dev/codec_ak4556.h ****  ** @addtogroup codec
  13:../libDaisy/src/dev/codec_ak4556.h ****  ** 
  14:../libDaisy/src/dev/codec_ak4556.h ****  ** I don't see any real reason to have this be more than a function, but in case we want
  15:../libDaisy/src/dev/codec_ak4556.h ****  ** to add other functions down the road I wrapped the function in a class.
  16:../libDaisy/src/dev/codec_ak4556.h ****  ***/
  17:../libDaisy/src/dev/codec_ak4556.h **** class Ak4556
  18:../libDaisy/src/dev/codec_ak4556.h **** {
  19:../libDaisy/src/dev/codec_ak4556.h ****   public:
  20:../libDaisy/src/dev/codec_ak4556.h ****     Ak4556() {}
  21:../libDaisy/src/dev/codec_ak4556.h ****     ~Ak4556() {}
  39              		.loc 3 21 5 view .LVU1
  40              		.loc 3 21 5 is_stmt 0 view .LVU2
  41              	.LBE143:
  42              	.LBB144:
  43              	.LBI144:
  44              		.file 4 "../libDaisy/src/sys/system.h"
   1:../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libDaisy/src/sys/system.h **** 
   4:../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libDaisy/src/sys/system.h **** 
   6:../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libDaisy/src/sys/system.h **** 
   9:../libDaisy/src/sys/system.h **** namespace daisy
  10:../libDaisy/src/sys/system.h **** {
  11:../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libDaisy/src/sys/system.h ****  **
  15:../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../libDaisy/src/sys/system.h ****  */
  18:../libDaisy/src/sys/system.h **** class System
  19:../libDaisy/src/sys/system.h **** {
  20:../libDaisy/src/sys/system.h ****   public:
  21:../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libDaisy/src/sys/system.h ****     struct Config
  23:../libDaisy/src/sys/system.h ****     {
  24:../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libDaisy/src/sys/system.h ****         {
  27:../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
ARM GAS  /tmp/cciHSaAV.s 			page 3


  29:../libDaisy/src/sys/system.h ****         };
  30:../libDaisy/src/sys/system.h **** 
  31:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../libDaisy/src/sys/system.h ****          ** */
  35:../libDaisy/src/sys/system.h ****         void Defaults()
  36:../libDaisy/src/sys/system.h ****         {
  37:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libDaisy/src/sys/system.h ****         }
  42:../libDaisy/src/sys/system.h **** 
  43:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../libDaisy/src/sys/system.h ****          ** */
  47:../libDaisy/src/sys/system.h ****         void Boost()
  48:../libDaisy/src/sys/system.h ****         {
  49:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libDaisy/src/sys/system.h ****         }
  54:../libDaisy/src/sys/system.h **** 
  55:../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../libDaisy/src/sys/system.h ****     };
  60:../libDaisy/src/sys/system.h **** 
  61:../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../libDaisy/src/sys/system.h ****     {
  64:../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../libDaisy/src/sys/system.h ****         SDRAM,
  71:../libDaisy/src/sys/system.h ****         QSPI,
  72:../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../libDaisy/src/sys/system.h ****     };
  74:../libDaisy/src/sys/system.h **** 
  75:../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../libDaisy/src/sys/system.h ****     {
  78:../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../libDaisy/src/sys/system.h ****         {
  80:../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../libDaisy/src/sys/system.h ****         } status;
  85:../libDaisy/src/sys/system.h ****         uint32_t data;
ARM GAS  /tmp/cciHSaAV.s 			page 4


  86:../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../libDaisy/src/sys/system.h ****         {
  88:../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../libDaisy/src/sys/system.h ****             LAST
  93:../libDaisy/src/sys/system.h ****         } version;
  94:../libDaisy/src/sys/system.h ****     };
  95:../libDaisy/src/sys/system.h **** 
  96:../libDaisy/src/sys/system.h ****     System() {}
  97:../libDaisy/src/sys/system.h ****     ~System() {}
  45              		.loc 4 97 5 is_stmt 1 view .LVU3
  46              		.loc 4 97 5 is_stmt 0 view .LVU4
  47              	.LBE144:
  48              	.LBB145:
  49              	.LBI145:
  50              		.file 5 "../libDaisy/src/hid/usb.h"
   1:../libDaisy/src/hid/usb.h **** #pragma once
   2:../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libDaisy/src/hid/usb.h **** 
   7:../libDaisy/src/hid/usb.h **** namespace daisy
   8:../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libDaisy/src/hid/usb.h ****     @{
  10:../libDaisy/src/hid/usb.h **** */
  11:../libDaisy/src/hid/usb.h **** 
  12:../libDaisy/src/hid/usb.h **** {
  13:../libDaisy/src/hid/usb.h **** /** 
  14:../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../libDaisy/src/hid/usb.h **** */
  18:../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../libDaisy/src/hid/usb.h **** {
  20:../libDaisy/src/hid/usb.h ****   public:
  21:../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libDaisy/src/hid/usb.h ****     enum class Result
  23:../libDaisy/src/hid/usb.h ****     {
  24:../libDaisy/src/hid/usb.h ****         OK,
  25:../libDaisy/src/hid/usb.h ****         ERR,
  26:../libDaisy/src/hid/usb.h ****     };
  27:../libDaisy/src/hid/usb.h **** 
  28:../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libDaisy/src/hid/usb.h ****     {
  31:../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libDaisy/src/hid/usb.h ****     };
  35:../libDaisy/src/hid/usb.h **** 
  36:../libDaisy/src/hid/usb.h **** 
  37:../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libDaisy/src/hid/usb.h **** 
ARM GAS  /tmp/cciHSaAV.s 			page 5


  40:../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libDaisy/src/hid/usb.h **** 
  42:../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  51              		.loc 5 42 5 is_stmt 1 view .LVU5
  52              		.loc 5 42 5 is_stmt 0 view .LVU6
  53              	.LBE145:
  54              	.LBB146:
  55              	.LBI146:
  56              		.file 6 "../libDaisy/src/per/adc.h"
   1:../libDaisy/src/per/adc.h **** #pragma once
   2:../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libDaisy/src/per/adc.h **** 
   9:../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libDaisy/src/per/adc.h **** 
  11:../libDaisy/src/per/adc.h **** namespace daisy
  12:../libDaisy/src/per/adc.h **** {
  13:../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libDaisy/src/per/adc.h ****     @{
  15:../libDaisy/src/per/adc.h **** */
  16:../libDaisy/src/per/adc.h **** 
  17:../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libDaisy/src/per/adc.h **** */
  21:../libDaisy/src/per/adc.h **** 
  22:../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libDaisy/src/per/adc.h ****  *           one channel.
  26:../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../libDaisy/src/per/adc.h **** */
  31:../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libDaisy/src/per/adc.h **** {
  33:../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../libDaisy/src/per/adc.h ****     {
  36:../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libDaisy/src/per/adc.h ****     };
  41:../libDaisy/src/per/adc.h **** 
  42:../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../libDaisy/src/per/adc.h ****     {
  45:../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
ARM GAS  /tmp/cciHSaAV.s 			page 6


  49:../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../libDaisy/src/per/adc.h ****     };
  54:../libDaisy/src/per/adc.h **** 
  55:../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../libDaisy/src/per/adc.h ****      */
  59:../libDaisy/src/per/adc.h ****     void InitSingle(Pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../libDaisy/src/per/adc.h **** 
  61:../libDaisy/src/per/adc.h ****     /** 
  62:../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../libDaisy/src/per/adc.h ****     */
  74:../libDaisy/src/per/adc.h ****     void InitMux(Pin             adc_pin,
  75:../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../libDaisy/src/per/adc.h ****                  Pin             mux_0,
  77:../libDaisy/src/per/adc.h ****                  Pin             mux_1 = Pin(PORTX, 0),
  78:../libDaisy/src/per/adc.h ****                  Pin             mux_2 = Pin(PORTX, 0),
  79:../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../libDaisy/src/per/adc.h **** 
  81:../libDaisy/src/per/adc.h ****     GPIO            pin_;                   /**< & */
  82:../libDaisy/src/per/adc.h ****     GPIO            mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../libDaisy/src/per/adc.h **** };
  86:../libDaisy/src/per/adc.h **** 
  87:../libDaisy/src/per/adc.h **** /**
  88:../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../libDaisy/src/per/adc.h **** */
  90:../libDaisy/src/per/adc.h **** class AdcHandle
  91:../libDaisy/src/per/adc.h **** {
  92:../libDaisy/src/per/adc.h ****   public:
  93:../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../libDaisy/src/per/adc.h ****     {
  96:../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
ARM GAS  /tmp/cciHSaAV.s 			page 7


 106:../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../libDaisy/src/per/adc.h ****     };
 108:../libDaisy/src/per/adc.h **** 
 109:../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  57              		.loc 6 110 5 is_stmt 1 view .LVU7
  58              		.loc 6 110 5 is_stmt 0 view .LVU8
  59              	.LBE146:
  60              	.LBB147:
  61              	.LBI147:
  62              		.file 7 "../libDaisy/src/hid/audio.h"
   1:../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libDaisy/src/hid/audio.h **** 
   4:../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libDaisy/src/hid/audio.h **** 
   6:../libDaisy/src/hid/audio.h **** namespace daisy
   7:../libDaisy/src/hid/audio.h **** {
   8:../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libDaisy/src/hid/audio.h ****  */
  22:../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../libDaisy/src/hid/audio.h **** {
  24:../libDaisy/src/hid/audio.h ****   public:
  25:../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libDaisy/src/hid/audio.h ****     struct Config
  28:../libDaisy/src/hid/audio.h ****     {
  29:../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../libDaisy/src/hid/audio.h ****         size_t blocksize = 48;
  31:../libDaisy/src/hid/audio.h **** 
  32:../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate
  34:../libDaisy/src/hid/audio.h ****             = SaiHandle::Config::SampleRate::SAI_48KHZ;
  35:../libDaisy/src/hid/audio.h **** 
  36:../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  37:../libDaisy/src/hid/audio.h ****         float postgain = 1.f;
  38:../libDaisy/src/hid/audio.h **** 
  39:../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  40:../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  41:../libDaisy/src/hid/audio.h ****          */
  42:../libDaisy/src/hid/audio.h ****         float output_compensation = 1.f;
  43:../libDaisy/src/hid/audio.h ****     };
  44:../libDaisy/src/hid/audio.h **** 
  45:../libDaisy/src/hid/audio.h ****     enum class Result
  46:../libDaisy/src/hid/audio.h ****     {
ARM GAS  /tmp/cciHSaAV.s 			page 8


  47:../libDaisy/src/hid/audio.h ****         OK,
  48:../libDaisy/src/hid/audio.h ****         ERR,
  49:../libDaisy/src/hid/audio.h ****     };
  50:../libDaisy/src/hid/audio.h **** 
  51:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  52:../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  53:../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  54:../libDaisy/src/hid/audio.h ****      */
  55:../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  56:../libDaisy/src/hid/audio.h **** 
  57:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  58:../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  59:../libDaisy/src/hid/audio.h ****      */
  60:../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  61:../libDaisy/src/hid/audio.h **** 
  62:../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  63:../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  64:../libDaisy/src/hid/audio.h ****      */
  65:../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  66:../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
  67:../libDaisy/src/hid/audio.h ****                                   size_t       size);
  68:../libDaisy/src/hid/audio.h **** 
  69:../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  70:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  71:../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  72:../libDaisy/src/hid/audio.h ****     */
  73:../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  74:../libDaisy/src/hid/audio.h **** 
  75:../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  76:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  77:../libDaisy/src/hid/audio.h ****     */
  78:../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  79:../libDaisy/src/hid/audio.h **** 
  80:../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  81:../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  82:../libDaisy/src/hid/audio.h ****      */
  83:../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  84:../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  85:../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  86:../libDaisy/src/hid/audio.h **** 
  87:../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  88:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  63              		.loc 7 88 5 is_stmt 1 view .LVU9
  64              		.loc 7 88 5 is_stmt 0 view .LVU10
  65              	.LBE147:
  66              		.loc 2 22 19 view .LVU11
  67 0000 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE2449:
  71              		.weak	_ZN5daisy9DaisySeedD1Ev
  72              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  73 0002 00BF     		.section	.text.startup.main,"ax",%progbits
  74              		.align	1
  75              		.p2align 2,,3
  76              		.global	main
  77              		.syntax unified
  78              		.thumb
ARM GAS  /tmp/cciHSaAV.s 			page 9


  79              		.thumb_func
  81              	main:
  82              	.LFB2454:
   1:Blink.cpp     **** #include "daisy_seed.h"
   2:Blink.cpp     **** 
   3:Blink.cpp     **** // Use the daisy namespace to prevent having to type
   4:Blink.cpp     **** // daisy:: before all libdaisy functions
   5:Blink.cpp     **** using namespace daisy;
   6:Blink.cpp     **** 
   7:Blink.cpp     **** // Declare a DaisySeed object called hardware
   8:Blink.cpp     **** DaisySeed hardware;
   9:Blink.cpp     **** 
  10:Blink.cpp     **** int main(void)
  11:Blink.cpp     **** {
  83              		.loc 1 11 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  12:Blink.cpp     ****     // Declare a variable to store the state we want to set for the LED.
  13:Blink.cpp     ****     bool led_state;
  87              		.loc 1 13 5 view .LVU13
  14:Blink.cpp     ****     led_state = true;
  88              		.loc 1 14 5 view .LVU14
  89              	.LVL1:
  15:Blink.cpp     **** 
  16:Blink.cpp     ****     // Configure and Initialize the Daisy Seed
  17:Blink.cpp     ****     // These are separate to allow reconfiguration of any of the internal
  18:Blink.cpp     ****     // components before initialization.
  19:Blink.cpp     ****     hardware.Configure();
  90              		.loc 1 19 5 view .LVU15
  11:Blink.cpp     ****     // Declare a variable to store the state we want to set for the LED.
  91              		.loc 1 11 1 is_stmt 0 view .LVU16
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96              		.loc 1 19 23 view .LVU17
  97 0002 0948     		ldr	r0, .L6
  14:Blink.cpp     ****     led_state = true;
  98              		.loc 1 14 15 view .LVU18
  99 0004 0124     		movs	r4, #1
 100              		.loc 1 19 23 view .LVU19
 101 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 102              	.LVL2:
  20:Blink.cpp     ****     hardware.Init();
 103              		.loc 1 20 5 is_stmt 1 view .LVU20
 104              		.loc 1 20 18 is_stmt 0 view .LVU21
 105 000a 0021     		movs	r1, #0
 106 000c 0648     		ldr	r0, .L6
 107 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 108              	.LVL3:
 109              	.L4:
  21:Blink.cpp     **** 
  22:Blink.cpp     ****     // Loop forever
  23:Blink.cpp     ****     for(;;)
 110              		.loc 1 23 5 is_stmt 1 view .LVU22
  24:Blink.cpp     ****     {
ARM GAS  /tmp/cciHSaAV.s 			page 10


  25:Blink.cpp     ****         // Set the onboard LED
  26:Blink.cpp     ****         hardware.SetLed(led_state);
 111              		.loc 1 26 9 view .LVU23
 112              		.loc 1 26 24 is_stmt 0 view .LVU24
 113 0012 2146     		mov	r1, r4
 114 0014 0448     		ldr	r0, .L6
 115 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6SetLedEb
 116              	.LVL4:
  27:Blink.cpp     **** 
  28:Blink.cpp     ****         // Toggle the LED state for the next time around.
  29:Blink.cpp     ****         led_state = !led_state;
 117              		.loc 1 29 9 is_stmt 1 view .LVU25
  30:Blink.cpp     **** 
  31:Blink.cpp     ****         // Wait 500ms
  32:Blink.cpp     ****         System::Delay(500);
 118              		.loc 1 32 22 is_stmt 0 discriminator 1 view .LVU26
 119 001a 4FF4FA70 		mov	r0, #500
  29:Blink.cpp     **** 
 120              		.loc 1 29 19 view .LVU27
 121 001e 84F00104 		eor	r4, r4, #1
 122              	.LVL5:
 123              		.loc 1 32 9 is_stmt 1 discriminator 1 view .LVU28
 124              		.loc 1 32 22 is_stmt 0 discriminator 1 view .LVU29
 125 0022 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 126              	.LVL6:
  23:Blink.cpp     ****     {
 127              		.loc 1 23 5 is_stmt 1 view .LVU30
 128 0026 F4E7     		b	.L4
 129              	.L7:
 130              		.align	2
 131              	.L6:
 132 0028 00000000 		.word	hardware
 133              		.cfi_endproc
 134              	.LFE2454:
 136              		.section	.text.startup._GLOBAL__sub_I_hardware,"ax",%progbits
 137              		.align	1
 138              		.p2align 2,,3
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	_GLOBAL__sub_I_hardware:
 144              	.LFB2473:
  33:Blink.cpp     ****     }
  34:Blink.cpp     **** }...
 145              		.loc 1 34 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 150              	.LBB214:
 151              	.LBI214:
 152              		.loc 1 34 1 view .LVU32
 153              	.LVL7:
 154              	.LBB215:
 155              	.LBB216:
 156              	.LBI216:
  21:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /tmp/cciHSaAV.s 			page 11


 157              		.loc 2 21 5 view .LVU33
 158              	.LBB217:
 159              	.LBB218:
 160              	.LBI218:
 161              		.file 8 "../libDaisy/src/per/qspi.h"
   1:../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libDaisy/src/per/qspi.h **** 
   4:../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libDaisy/src/per/qspi.h **** 
   6:../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../libDaisy/src/per/qspi.h **** #include "daisy_core.h"
   8:../libDaisy/src/per/qspi.h **** #include "util/hal_map.h"
   9:../libDaisy/src/per/qspi.h **** 
  10:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  11:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  12:../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  13:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  14:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  15:../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  16:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  17:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  18:../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  19:../libDaisy/src/per/qspi.h **** 
  20:../libDaisy/src/per/qspi.h **** namespace daisy
  21:../libDaisy/src/per/qspi.h **** {
  22:../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  23:../libDaisy/src/per/qspi.h **** @{
  24:../libDaisy/src/per/qspi.h **** */
  25:../libDaisy/src/per/qspi.h **** 
  26:../libDaisy/src/per/qspi.h **** /** 
  27:../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  28:../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  29:../libDaisy/src/per/qspi.h ****     * IS25LP080D
  30:../libDaisy/src/per/qspi.h **** */
  31:../libDaisy/src/per/qspi.h **** class QSPIHandle
  32:../libDaisy/src/per/qspi.h **** {
  33:../libDaisy/src/per/qspi.h ****   public:
  34:../libDaisy/src/per/qspi.h ****     enum Result
  35:../libDaisy/src/per/qspi.h ****     {
  36:../libDaisy/src/per/qspi.h ****         OK = 0,
  37:../libDaisy/src/per/qspi.h ****         ERR
  38:../libDaisy/src/per/qspi.h ****     };
  39:../libDaisy/src/per/qspi.h **** 
  40:../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  41:../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  42:../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  43:../libDaisy/src/per/qspi.h ****          * 
  44:../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  45:../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  46:../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  47:../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  48:../libDaisy/src/per/qspi.h ****          */
  49:../libDaisy/src/per/qspi.h ****     enum Status
  50:../libDaisy/src/per/qspi.h ****     {
  51:../libDaisy/src/per/qspi.h ****         GOOD = 0,
  52:../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
ARM GAS  /tmp/cciHSaAV.s 			page 12


  53:../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  54:../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  55:../libDaisy/src/per/qspi.h ****     };
  56:../libDaisy/src/per/qspi.h **** 
  57:../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  58:../libDaisy/src/per/qspi.h ****     struct Config
  59:../libDaisy/src/per/qspi.h ****     {
  60:../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  61:../libDaisy/src/per/qspi.h ****         enum Device
  62:../libDaisy/src/per/qspi.h ****         {
  63:../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  64:../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  65:../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  66:../libDaisy/src/per/qspi.h ****         };
  67:../libDaisy/src/per/qspi.h **** 
  68:../libDaisy/src/per/qspi.h ****         /** 
  69:../libDaisy/src/per/qspi.h ****         Modes of operation.
  70:../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  71:../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  72:../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  73:../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  74:../libDaisy/src/per/qspi.h ****         */
  75:../libDaisy/src/per/qspi.h ****         enum Mode
  76:../libDaisy/src/per/qspi.h ****         {
  77:../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  78:../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  79:../libDaisy/src/per/qspi.h ****             MODE_LAST,
  80:../libDaisy/src/per/qspi.h ****         };
  81:../libDaisy/src/per/qspi.h **** 
  82:../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  83:../libDaisy/src/per/qspi.h ****         struct
  84:../libDaisy/src/per/qspi.h ****         {
  85:../libDaisy/src/per/qspi.h ****             Pin io0; /**< & */
  86:../libDaisy/src/per/qspi.h ****             Pin io1; /**< & */
  87:../libDaisy/src/per/qspi.h ****             Pin io2; /**< & */
  88:../libDaisy/src/per/qspi.h ****             Pin io3; /**< & */
  89:../libDaisy/src/per/qspi.h ****             Pin clk; /**< & */
  90:../libDaisy/src/per/qspi.h ****             Pin ncs; /**< & */
  91:../libDaisy/src/per/qspi.h ****         } pin_config;
  92:../libDaisy/src/per/qspi.h **** 
  93:../libDaisy/src/per/qspi.h ****         Device device;
  94:../libDaisy/src/per/qspi.h ****         Mode   mode;
  95:../libDaisy/src/per/qspi.h ****     };
  96:../libDaisy/src/per/qspi.h **** 
  97:../libDaisy/src/per/qspi.h ****     /** 
  98:../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  99:../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
 100:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 101:../libDaisy/src/per/qspi.h ****         */
 102:../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 103:../libDaisy/src/per/qspi.h **** 
 104:../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 105:../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 106:../libDaisy/src/per/qspi.h **** 
 107:../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 108:../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 109:../libDaisy/src/per/qspi.h ****     /** 
ARM GAS  /tmp/cciHSaAV.s 			page 13


 110:../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 111:../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 112:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 113:../libDaisy/src/per/qspi.h ****         */
 114:../libDaisy/src/per/qspi.h ****     Result DeInit();
 115:../libDaisy/src/per/qspi.h **** 
 116:../libDaisy/src/per/qspi.h ****     /** 
 117:../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 118:../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 119:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 120:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 121:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 122:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 123:../libDaisy/src/per/qspi.h ****         */
 124:../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 125:../libDaisy/src/per/qspi.h **** 
 126:../libDaisy/src/per/qspi.h ****     /** 
 127:../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 128:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 129:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 130:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 131:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 132:../libDaisy/src/per/qspi.h ****         */
 133:../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 134:../libDaisy/src/per/qspi.h **** 
 135:../libDaisy/src/per/qspi.h ****     /** 
 136:../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 137:../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 138:../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 139:../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 140:../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 141:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 142:../libDaisy/src/per/qspi.h ****         */
 143:../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 144:../libDaisy/src/per/qspi.h **** 
 145:../libDaisy/src/per/qspi.h ****     /**  
 146:../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 147:../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 148:../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 149:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 150:../libDaisy/src/per/qspi.h ****         */
 151:../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 152:../libDaisy/src/per/qspi.h **** 
 153:../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 154:../libDaisy/src/per/qspi.h ****      *  \returns Status
 155:../libDaisy/src/per/qspi.h ****      */
 156:../libDaisy/src/per/qspi.h ****     Status GetStatus();
 157:../libDaisy/src/per/qspi.h **** 
 158:../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 159:../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 160:../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 161:../libDaisy/src/per/qspi.h ****      * 
 162:../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 163:../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 164:../libDaisy/src/per/qspi.h ****     */
 165:../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 166:../libDaisy/src/per/qspi.h **** 
ARM GAS  /tmp/cciHSaAV.s 			page 14


 167:../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 162              		.loc 8 167 5 view .LVU34
 163              	.LBB219:
 164              	.LBB220:
 165              		.loc 8 167 20 is_stmt 0 view .LVU35
 166 0000 1048     		ldr	r0, .L10
 167              	.LBE220:
 168              	.LBE219:
 169              	.LBE218:
 170              	.LBB223:
 171              	.LBB224:
 172              	.LBB225:
 173              	.LBB226:
 174              	.LBB227:
 175              	.LBB228:
 176              	.LBB229:
 177              	.LBB230:
 178              		.file 9 "../libDaisy/src/daisy_core.h"
   1:../libDaisy/src/daisy_core.h **** #pragma once
   2:../libDaisy/src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../libDaisy/src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../libDaisy/src/daisy_core.h **** #include <stdint.h>
   5:../libDaisy/src/daisy_core.h **** #include <stdlib.h>
   6:../libDaisy/src/daisy_core.h **** 
   7:../libDaisy/src/daisy_core.h **** #if defined(_MSC_VER)
   8:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../libDaisy/src/daisy_core.h **** #elif defined(__clang__)
  10:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../libDaisy/src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../libDaisy/src/daisy_core.h **** #elif defined(__GNUC__)
  13:../libDaisy/src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../libDaisy/src/daisy_core.h **** #else
  15:../libDaisy/src/daisy_core.h **** #error unknown compiler
  16:../libDaisy/src/daisy_core.h **** #endif
  17:../libDaisy/src/daisy_core.h **** 
  18:../libDaisy/src/daisy_core.h **** /** @addtogroup utility
  19:../libDaisy/src/daisy_core.h ****     @{
  20:../libDaisy/src/daisy_core.h **** */
  21:../libDaisy/src/daisy_core.h **** 
  22:../libDaisy/src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../libDaisy/src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../libDaisy/src/daisy_core.h **** */
  25:../libDaisy/src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../libDaisy/src/daisy_core.h **** /** 
  27:../libDaisy/src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../libDaisy/src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../libDaisy/src/daisy_core.h **** cache enabled.
  30:../libDaisy/src/daisy_core.h **** */
  31:../libDaisy/src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../libDaisy/src/daisy_core.h **** 
  33:../libDaisy/src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../libDaisy/src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../libDaisy/src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../libDaisy/src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../libDaisy/src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../libDaisy/src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../libDaisy/src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
ARM GAS  /tmp/cciHSaAV.s 			page 15


  40:../libDaisy/src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../libDaisy/src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../libDaisy/src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../libDaisy/src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../libDaisy/src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../libDaisy/src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../libDaisy/src/daisy_core.h **** 
  47:../libDaisy/src/daisy_core.h **** 
  48:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../libDaisy/src/daisy_core.h **** #define OUT_L out[0]
  51:../libDaisy/src/daisy_core.h **** 
  52:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../libDaisy/src/daisy_core.h **** #define OUT_R out[1]
  55:../libDaisy/src/daisy_core.h **** 
  56:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../libDaisy/src/daisy_core.h **** #define IN_L in[0]
  59:../libDaisy/src/daisy_core.h **** 
  60:../libDaisy/src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../libDaisy/src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../libDaisy/src/daisy_core.h **** #define IN_R in[1]
  63:../libDaisy/src/daisy_core.h **** 
  64:../libDaisy/src/daisy_core.h **** /** 
  65:../libDaisy/src/daisy_core.h ****     Computes cube.
  66:../libDaisy/src/daisy_core.h ****     \param x Number to be cubed
  67:../libDaisy/src/daisy_core.h ****     \return x ^ 3
  68:../libDaisy/src/daisy_core.h **** */
  69:../libDaisy/src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../libDaisy/src/daisy_core.h **** {
  71:../libDaisy/src/daisy_core.h ****     return (x * x) * x;
  72:../libDaisy/src/daisy_core.h **** }
  73:../libDaisy/src/daisy_core.h **** 
  74:../libDaisy/src/daisy_core.h **** /** 
  75:../libDaisy/src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  77:../libDaisy/src/daisy_core.h ****     \return Scaled number.
  78:../libDaisy/src/daisy_core.h **** */
  79:../libDaisy/src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../libDaisy/src/daisy_core.h **** {
  81:../libDaisy/src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../libDaisy/src/daisy_core.h **** }
  83:../libDaisy/src/daisy_core.h **** 
  84:../libDaisy/src/daisy_core.h **** /**
  85:../libDaisy/src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../libDaisy/src/daisy_core.h **** */
  87:../libDaisy/src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../libDaisy/src/daisy_core.h **** {
  89:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../libDaisy/src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../libDaisy/src/daisy_core.h **** }
  93:../libDaisy/src/daisy_core.h **** 
  94:../libDaisy/src/daisy_core.h **** 
  95:../libDaisy/src/daisy_core.h **** /** 
  96:../libDaisy/src/daisy_core.h ****     Converts Signed 8-bit to float
ARM GAS  /tmp/cciHSaAV.s 			page 16


  97:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
  98:../libDaisy/src/daisy_core.h ****     \return Scaled number.
  99:../libDaisy/src/daisy_core.h **** */
 100:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../libDaisy/src/daisy_core.h **** {
 102:../libDaisy/src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../libDaisy/src/daisy_core.h **** }
 104:../libDaisy/src/daisy_core.h **** 
 105:../libDaisy/src/daisy_core.h **** /**
 106:../libDaisy/src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../libDaisy/src/daisy_core.h **** */
 108:../libDaisy/src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../libDaisy/src/daisy_core.h **** {
 110:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../libDaisy/src/daisy_core.h **** }
 114:../libDaisy/src/daisy_core.h **** 
 115:../libDaisy/src/daisy_core.h **** /** 
 116:../libDaisy/src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../libDaisy/src/daisy_core.h ****     \param x Number to be scaled.
 118:../libDaisy/src/daisy_core.h ****     \return Scaled number.
 119:../libDaisy/src/daisy_core.h **** */
 120:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../libDaisy/src/daisy_core.h **** {
 122:../libDaisy/src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../libDaisy/src/daisy_core.h **** }
 124:../libDaisy/src/daisy_core.h **** 
 125:../libDaisy/src/daisy_core.h **** /**
 126:../libDaisy/src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../libDaisy/src/daisy_core.h **** */
 128:../libDaisy/src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../libDaisy/src/daisy_core.h **** {
 130:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../libDaisy/src/daisy_core.h **** }
 134:../libDaisy/src/daisy_core.h **** 
 135:../libDaisy/src/daisy_core.h **** /**
 136:../libDaisy/src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../libDaisy/src/daisy_core.h ****  */
 138:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../libDaisy/src/daisy_core.h **** {
 140:../libDaisy/src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../libDaisy/src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../libDaisy/src/daisy_core.h **** }
 143:../libDaisy/src/daisy_core.h **** /**
 144:../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../libDaisy/src/daisy_core.h ****  */
 146:../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../libDaisy/src/daisy_core.h **** {
 148:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../libDaisy/src/daisy_core.h **** }
 152:../libDaisy/src/daisy_core.h **** 
 153:../libDaisy/src/daisy_core.h **** /**
ARM GAS  /tmp/cciHSaAV.s 			page 17


 154:../libDaisy/src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../libDaisy/src/daisy_core.h ****  */
 156:../libDaisy/src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../libDaisy/src/daisy_core.h **** {
 158:../libDaisy/src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../libDaisy/src/daisy_core.h **** }
 160:../libDaisy/src/daisy_core.h **** /**
 161:../libDaisy/src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../libDaisy/src/daisy_core.h ****  */
 163:../libDaisy/src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../libDaisy/src/daisy_core.h **** {
 165:../libDaisy/src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../libDaisy/src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../libDaisy/src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../libDaisy/src/daisy_core.h **** }
 169:../libDaisy/src/daisy_core.h **** 
 170:../libDaisy/src/daisy_core.h **** #ifdef __cplusplus
 171:../libDaisy/src/daisy_core.h **** 
 172:../libDaisy/src/daisy_core.h **** namespace daisy
 173:../libDaisy/src/daisy_core.h **** {
 174:../libDaisy/src/daisy_core.h **** /** @brief GPIO Port names */
 175:../libDaisy/src/daisy_core.h **** enum GPIOPort
 176:../libDaisy/src/daisy_core.h **** {
 177:../libDaisy/src/daisy_core.h ****     PORTA, /**< Port A */
 178:../libDaisy/src/daisy_core.h ****     PORTB, /**< Port B */
 179:../libDaisy/src/daisy_core.h ****     PORTC, /**< Port C */
 180:../libDaisy/src/daisy_core.h ****     PORTD, /**< Port D */
 181:../libDaisy/src/daisy_core.h ****     PORTE, /**< Port E */
 182:../libDaisy/src/daisy_core.h ****     PORTF, /**< Port F */
 183:../libDaisy/src/daisy_core.h ****     PORTG, /**< Port G */
 184:../libDaisy/src/daisy_core.h ****     PORTH, /**< Port H */
 185:../libDaisy/src/daisy_core.h ****     PORTI, /**< Port I */
 186:../libDaisy/src/daisy_core.h ****     PORTJ, /**< Port J */
 187:../libDaisy/src/daisy_core.h ****     PORTK, /**< Port K */
 188:../libDaisy/src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 189:../libDaisy/src/daisy_core.h **** };
 190:../libDaisy/src/daisy_core.h **** 
 191:../libDaisy/src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 192:../libDaisy/src/daisy_core.h **** struct Pin
 193:../libDaisy/src/daisy_core.h **** {
 194:../libDaisy/src/daisy_core.h ****     GPIOPort port;
 195:../libDaisy/src/daisy_core.h ****     uint8_t  pin;
 196:../libDaisy/src/daisy_core.h **** 
 197:../libDaisy/src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 198:../libDaisy/src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 199:../libDaisy/src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 200:../libDaisy/src/daisy_core.h ****     */
 201:../libDaisy/src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 202:../libDaisy/src/daisy_core.h **** 
 203:../libDaisy/src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 204:../libDaisy/src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 179              		.loc 9 204 23 view .LVU36
 180 0002 4FF60B71 		movw	r1, #65291
 181              	.LBE230:
 182              	.LBE229:
 183              	.LBE228:
 184              	.LBE227:
ARM GAS  /tmp/cciHSaAV.s 			page 18


 185              	.LBE226:
 186              	.LBE225:
 187              	.LBE224:
 188              	.LBE223:
 189              	.LBB251:
 190              	.LBB222:
 191              	.LBB221:
 192              		.loc 8 167 20 view .LVU37
 193 0006 0023     		movs	r3, #0
 194              	.LBE221:
 195              	.LBE222:
 196              	.LBE251:
 197              	.LBE217:
 198              	.LBE216:
   8:Blink.cpp     **** DaisySeed hardware;
 199              		.loc 1 8 11 discriminator 1 view .LVU38
 200 0008 0F4A     		ldr	r2, .L10+4
 201              	.LBE215:
 202              	.LBE214:
 203              		.loc 1 34 1 view .LVU39
 204 000a 10B4     		push	{r4}
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 4, -4
 207              	.LBB341:
 208              	.LBB339:
 209              	.LBB336:
 210              	.LBB333:
 211              	.LBB252:
 212              	.LBB253:
 213              	.LBB254:
 214              	.LBB255:
 215              	.LBB256:
 216              		.loc 9 204 23 view .LVU40
 217 000c 6FF0F414 		mvn	r4, #15991028
 218              	.LBE256:
 219              	.LBE255:
 220              	.LBE254:
 221              	.LBE253:
 222              	.LBE252:
 223              	.LBB261:
 224              	.LBB247:
 225              	.LBB243:
 226              	.LBB239:
 227              	.LBB235:
 228              	.LBB233:
 229              	.LBB232:
 230              	.LBB231:
 231 0010 0185     		strh	r1, [r0, #40]	@ movhi
 232              	.LBE231:
 233              	.LBE232:
 234              	.LBE233:
 235              	.LBE235:
 236              	.LBE239:
 237              	.LBE243:
 238              	.LBE247:
 239              	.LBE261:
 240              	.LBB262:
ARM GAS  /tmp/cciHSaAV.s 			page 19


 241              	.LBB263:
 242              	.LBB264:
 243              	.LBB265:
 244              	.LBB266:
 245              	.LBB267:
 246              	.LBB268:
 247              	.LBB269:
 248 0012 8187     		strh	r1, [r0, #60]	@ movhi
 249              	.LBE269:
 250              	.LBE268:
 251              	.LBE267:
 252              	.LBE266:
 253              	.LBE265:
 254              	.LBE264:
 255              	.LBE263:
 256              	.LBE262:
 257              	.LBB283:
 258              	.LBB284:
 259              	.LBB285:
 260              	.LBB286:
 261              	.LBB287:
 262              	.LBB288:
 263              	.LBB289:
 264              	.LBB290:
 265              	.LBB291:
 266 0014 A0F85810 		strh	r1, [r0, #88]	@ movhi
 267              	.LBE291:
 268              	.LBE290:
 269              	.LBE289:
 270              	.LBE288:
 271              	.LBE287:
 272              	.LBE286:
 273              	.LBE285:
 274              	.LBE284:
 275              	.LBE283:
 276              	.LBE333:
 277              	.LBE336:
   8:Blink.cpp     **** DaisySeed hardware;
 278              		.loc 1 8 11 discriminator 1 view .LVU41
 279 0018 0C49     		ldr	r1, .L10+8
 280              	.LBB337:
 281              	.LBB334:
 282              	.LBB308:
 283              	.LBB309:
 284              	.LBB310:
  87:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 285              		.loc 7 87 21 view .LVU42
 286 001a 4361     		str	r3, [r0, #20]
 287              	.LBE310:
 288              	.LBE309:
 289              	.LBE308:
 290              	.LBB311:
 291              	.LBB312:
 292              	.LBB313:
 293              		.file 10 "../libDaisy/src/per/dac.h"
   1:../libDaisy/src/per/dac.h **** #pragma once
   2:../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
ARM GAS  /tmp/cciHSaAV.s 			page 20


   3:../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libDaisy/src/per/dac.h **** #include "stm32h7xx_hal.h"
   5:../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/dac.h **** 
   7:../libDaisy/src/per/dac.h **** namespace daisy
   8:../libDaisy/src/per/dac.h **** {
   9:../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libDaisy/src/per/dac.h ****  ** 
  12:../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libDaisy/src/per/dac.h ****  **
  15:../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libDaisy/src/per/dac.h ****  **
  17:../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libDaisy/src/per/dac.h ****  ***/
  21:../libDaisy/src/per/dac.h **** class DacHandle
  22:../libDaisy/src/per/dac.h **** {
  23:../libDaisy/src/per/dac.h ****   public:
  24:../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libDaisy/src/per/dac.h ****     enum class Result
  26:../libDaisy/src/per/dac.h ****     {
  27:../libDaisy/src/per/dac.h ****         OK,
  28:../libDaisy/src/per/dac.h ****         ERR,
  29:../libDaisy/src/per/dac.h ****     };
  30:../libDaisy/src/per/dac.h **** 
  31:../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libDaisy/src/per/dac.h ****     enum class Channel
  33:../libDaisy/src/per/dac.h ****     {
  34:../libDaisy/src/per/dac.h ****         ONE,
  35:../libDaisy/src/per/dac.h ****         TWO,
  36:../libDaisy/src/per/dac.h ****         BOTH,
  37:../libDaisy/src/per/dac.h ****     };
  38:../libDaisy/src/per/dac.h **** 
  39:../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../libDaisy/src/per/dac.h ****      **
  41:../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libDaisy/src/per/dac.h ****      **
  43:../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libDaisy/src/per/dac.h ****      ***/
  46:../libDaisy/src/per/dac.h ****     enum class Mode
  47:../libDaisy/src/per/dac.h ****     {
  48:../libDaisy/src/per/dac.h ****         POLLING,
  49:../libDaisy/src/per/dac.h ****         DMA,
  50:../libDaisy/src/per/dac.h ****     };
  51:../libDaisy/src/per/dac.h **** 
  52:../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libDaisy/src/per/dac.h ****      ***/
  56:../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../libDaisy/src/per/dac.h ****     {
  58:../libDaisy/src/per/dac.h ****         BITS_8,
  59:../libDaisy/src/per/dac.h ****         BITS_12
ARM GAS  /tmp/cciHSaAV.s 			page 21


  60:../libDaisy/src/per/dac.h ****     };
  61:../libDaisy/src/per/dac.h **** 
  62:../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../libDaisy/src/per/dac.h ****     {
  65:../libDaisy/src/per/dac.h ****         ENABLED,
  66:../libDaisy/src/per/dac.h ****         DISABLED,
  67:../libDaisy/src/per/dac.h ****     };
  68:../libDaisy/src/per/dac.h **** 
  69:../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libDaisy/src/per/dac.h ****     struct Config
  71:../libDaisy/src/per/dac.h ****     {
  72:../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libDaisy/src/per/dac.h **** 
  78:../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libDaisy/src/per/dac.h ****     };
  83:../libDaisy/src/per/dac.h **** 
  84:../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 294              		.loc 10 84 19 view .LVU43
 295 001c 0362     		str	r3, [r0, #32]
 296              	.LBE313:
 297              	.LBE312:
 298              	.LBE311:
 299              	.LBB314:
 300              	.LBB248:
 301              	.LBB244:
 302              	.LBB240:
 303              	.LBB236:
 304              		.file 11 "../libDaisy/src/per/gpio.h"
   1:../libDaisy/src/per/gpio.h **** #pragma once
   2:../libDaisy/src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../libDaisy/src/per/gpio.h **** #define DSY_GPIO_H
   4:../libDaisy/src/per/gpio.h **** #include "daisy_core.h"
   5:../libDaisy/src/per/gpio.h **** 
   6:../libDaisy/src/per/gpio.h **** #ifdef __cplusplus
   7:../libDaisy/src/per/gpio.h **** 
   8:../libDaisy/src/per/gpio.h **** namespace daisy
   9:../libDaisy/src/per/gpio.h **** {
  10:../libDaisy/src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../libDaisy/src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../libDaisy/src/per/gpio.h ****  *  @ingroup peripheral
  13:../libDaisy/src/per/gpio.h ****  *   
  14:../libDaisy/src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../libDaisy/src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../libDaisy/src/per/gpio.h ****  * 
  17:../libDaisy/src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../libDaisy/src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../libDaisy/src/per/gpio.h ****  * 
  20:../libDaisy/src/per/gpio.h **** */
  21:../libDaisy/src/per/gpio.h **** class GPIO
ARM GAS  /tmp/cciHSaAV.s 			page 22


  22:../libDaisy/src/per/gpio.h **** {
  23:../libDaisy/src/per/gpio.h ****   public:
  24:../libDaisy/src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../libDaisy/src/per/gpio.h ****     enum class Mode
  26:../libDaisy/src/per/gpio.h ****     {
  27:../libDaisy/src/per/gpio.h ****         INPUT,      /**< Input for reading state of pin */
  28:../libDaisy/src/per/gpio.h ****         OUTPUT,     /**< Output w/ push-pull configuration */
  29:../libDaisy/src/per/gpio.h ****         OPEN_DRAIN, /**< Output w/ open-drain configuration */
  30:../libDaisy/src/per/gpio.h ****         ANALOG,     /**< Analog for connection to ADC or DAC peripheral */
  31:../libDaisy/src/per/gpio.h ****     };
  32:../libDaisy/src/per/gpio.h **** 
  33:../libDaisy/src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../libDaisy/src/per/gpio.h ****      *  
  35:../libDaisy/src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../libDaisy/src/per/gpio.h ****      * 30k and 50k
  37:../libDaisy/src/per/gpio.h ****      * 
  38:../libDaisy/src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../libDaisy/src/per/gpio.h ****      * disabled by hardware. 
  40:../libDaisy/src/per/gpio.h ****      */
  41:../libDaisy/src/per/gpio.h ****     enum class Pull
  42:../libDaisy/src/per/gpio.h ****     {
  43:../libDaisy/src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../libDaisy/src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../libDaisy/src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../libDaisy/src/per/gpio.h ****     };
  47:../libDaisy/src/per/gpio.h **** 
  48:../libDaisy/src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../libDaisy/src/per/gpio.h ****     enum class Speed
  50:../libDaisy/src/per/gpio.h ****     {
  51:../libDaisy/src/per/gpio.h ****         LOW,
  52:../libDaisy/src/per/gpio.h ****         MEDIUM,
  53:../libDaisy/src/per/gpio.h ****         HIGH,
  54:../libDaisy/src/per/gpio.h ****         VERY_HIGH,
  55:../libDaisy/src/per/gpio.h ****     };
  56:../libDaisy/src/per/gpio.h **** 
  57:../libDaisy/src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../libDaisy/src/per/gpio.h ****     struct Config
  59:../libDaisy/src/per/gpio.h ****     {
  60:../libDaisy/src/per/gpio.h ****         Pin   pin;
  61:../libDaisy/src/per/gpio.h ****         Mode  mode;
  62:../libDaisy/src/per/gpio.h ****         Pull  pull;
  63:../libDaisy/src/per/gpio.h ****         Speed speed;
  64:../libDaisy/src/per/gpio.h **** 
  65:../libDaisy/src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../libDaisy/src/per/gpio.h ****          *  an input, with no pullup. 
  67:../libDaisy/src/per/gpio.h ****          */
  68:../libDaisy/src/per/gpio.h ****         Config()
  69:../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 305              		.loc 11 69 57 discriminator 1 view .LVU44
 306 001e 4363     		str	r3, [r0, #52]
 307              	.LBE236:
 308              	.LBE240:
 309              	.LBE244:
 310              	.LBE248:
 311              	.LBE314:
 312              	.LBB315:
 313              	.LBB280:
ARM GAS  /tmp/cciHSaAV.s 			page 23


 314              	.LBB277:
 315              	.LBB274:
 316              	.LBB271:
 317 0020 8364     		str	r3, [r0, #72]
 318              	.LBE271:
 319              	.LBE274:
 320              	.LBE277:
 321              	.LBE280:
 322              	.LBE315:
 323              	.LBB316:
 324              	.LBB305:
 325              	.LBB302:
 326              	.LBB299:
 327              	.LBB296:
 328              	.LBB293:
 329 0022 4366     		str	r3, [r0, #100]
 330              	.LBE293:
 331              	.LBE296:
 332              	.LBE299:
 333              	.LBE302:
 334              	.LBE305:
 335              	.LBE316:
 336              	.LBB317:
 337              	.LBB318:
 338              	.LBB319:
 339              		.file 12 "../libDaisy/src/per/sai.h"
   1:../libDaisy/src/per/sai.h **** #pragma once
   2:../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../libDaisy/src/per/sai.h **** 
   5:../libDaisy/src/per/sai.h **** #include "util/hal_map.h"
   6:../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/sai.h **** 
   8:../libDaisy/src/per/sai.h **** namespace daisy
   9:../libDaisy/src/per/sai.h **** {
  10:../libDaisy/src/per/sai.h **** /** 
  11:../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  12:../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  13:../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  14:../libDaisy/src/per/sai.h ****  * 
  15:../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  16:../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  17:../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  18:../libDaisy/src/per/sai.h ****  *
  19:../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  20:../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  21:../libDaisy/src/per/sai.h ****  * 
  22:../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  23:../libDaisy/src/per/sai.h ****  * 
  24:../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  25:../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  26:../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  27:../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  28:../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  29:../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  30:../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  31:../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
ARM GAS  /tmp/cciHSaAV.s 			page 24


  32:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  33:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  34:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  35:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  36:../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  37:../libDaisy/src/per/sai.h ****  *  // Then Initialize
  38:../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  39:../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  40:../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  41:../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  42:../libDaisy/src/per/sai.h ****  */
  43:../libDaisy/src/per/sai.h **** class SaiHandle
  44:../libDaisy/src/per/sai.h **** {
  45:../libDaisy/src/per/sai.h ****   public:
  46:../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  47:../libDaisy/src/per/sai.h ****     struct Config
  48:../libDaisy/src/per/sai.h ****     {
  49:../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  50:../libDaisy/src/per/sai.h ****         enum class Peripheral
  51:../libDaisy/src/per/sai.h ****         {
  52:../libDaisy/src/per/sai.h ****             SAI_1,
  53:../libDaisy/src/per/sai.h ****             SAI_2,
  54:../libDaisy/src/per/sai.h ****         };
  55:../libDaisy/src/per/sai.h **** 
  56:../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  57:../libDaisy/src/per/sai.h ****         enum class SampleRate
  58:../libDaisy/src/per/sai.h ****         {
  59:../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  60:../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  61:../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  62:../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  63:../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  64:../libDaisy/src/per/sai.h ****         };
  65:../libDaisy/src/per/sai.h **** 
  66:../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  67:../libDaisy/src/per/sai.h ****         enum class BitDepth
  68:../libDaisy/src/per/sai.h ****         {
  69:../libDaisy/src/per/sai.h ****             SAI_16BIT,
  70:../libDaisy/src/per/sai.h ****             SAI_24BIT,
  71:../libDaisy/src/per/sai.h ****             SAI_32BIT,
  72:../libDaisy/src/per/sai.h ****         };
  73:../libDaisy/src/per/sai.h **** 
  74:../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  75:../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  76:../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  77:../libDaisy/src/per/sai.h ****          */
  78:../libDaisy/src/per/sai.h ****         enum class Sync
  79:../libDaisy/src/per/sai.h ****         {
  80:../libDaisy/src/per/sai.h ****             MASTER,
  81:../libDaisy/src/per/sai.h ****             SLAVE,
  82:../libDaisy/src/per/sai.h ****         };
  83:../libDaisy/src/per/sai.h **** 
  84:../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  85:../libDaisy/src/per/sai.h ****         enum class Direction
  86:../libDaisy/src/per/sai.h ****         {
  87:../libDaisy/src/per/sai.h ****             TRANSMIT,
  88:../libDaisy/src/per/sai.h ****             RECEIVE,
ARM GAS  /tmp/cciHSaAV.s 			page 25


  89:../libDaisy/src/per/sai.h ****         };
  90:../libDaisy/src/per/sai.h **** 
  91:../libDaisy/src/per/sai.h ****         Peripheral periph;
  92:../libDaisy/src/per/sai.h ****         struct
  93:../libDaisy/src/per/sai.h ****         {
  94:../libDaisy/src/per/sai.h ****             Pin mclk, fs, sck, sa, sb;
  95:../libDaisy/src/per/sai.h ****         } pin_config;
  96:../libDaisy/src/per/sai.h ****         SampleRate sr;
  97:../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  98:../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  99:../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
 100:../libDaisy/src/per/sai.h ****     };
 101:../libDaisy/src/per/sai.h **** 
 102:../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 103:../libDaisy/src/per/sai.h ****     enum class Result
 104:../libDaisy/src/per/sai.h ****     {
 105:../libDaisy/src/per/sai.h ****         OK,
 106:../libDaisy/src/per/sai.h ****         ERR,
 107:../libDaisy/src/per/sai.h ****     };
 108:../libDaisy/src/per/sai.h **** 
 109:../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 340              		.loc 12 109 19 view .LVU45
 341 0024 0367     		str	r3, [r0, #112]
 342              	.LBE319:
 343              	.LBE318:
 344              	.LBE317:
 345              	.LBB320:
 346              	.LBB260:
 347              	.LBB259:
 348              	.LBB258:
 349              	.LBB257:
 350              		.loc 9 204 23 view .LVU46
 351 0026 C0E90034 		strd	r3, r4, [r0]
 352 002a C0E90244 		strd	r4, r4, [r0, #8]
 353              	.LVL8:
 354              		.loc 9 204 23 view .LVU47
 355              	.LBE257:
 356              	.LBE258:
 357              	.LBE259:
 358              	.LBE260:
 359              	.LBE320:
 360              	.LBB321:
 361              	.LBI308:
  87:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 362              		.loc 7 87 5 is_stmt 1 view .LVU48
  87:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 363              		.loc 7 87 5 is_stmt 0 view .LVU49
 364              	.LBE321:
 365              	.LBB322:
 366              	.LBI322:
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 367              		.loc 6 109 5 is_stmt 1 view .LVU50
 109:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 368              		.loc 6 109 5 is_stmt 0 view .LVU51
 369              	.LBE322:
 370              	.LBB323:
 371              	.LBI311:
ARM GAS  /tmp/cciHSaAV.s 			page 26


 372              		.loc 10 84 5 is_stmt 1 view .LVU52
 373              		.loc 10 84 5 is_stmt 0 view .LVU53
 374              	.LBE323:
 375              	.LBB324:
 376              	.LBI324:
  40:../libDaisy/src/hid/usb.h **** 
 377              		.loc 5 40 5 is_stmt 1 view .LVU54
  40:../libDaisy/src/hid/usb.h **** 
 378              		.loc 5 40 5 is_stmt 0 view .LVU55
 379              	.LBE324:
 380              	.LBB325:
 381              	.LBI223:
  70:../libDaisy/src/per/gpio.h ****         {
  71:../libDaisy/src/per/gpio.h ****         }
  72:../libDaisy/src/per/gpio.h ****     };
  73:../libDaisy/src/per/gpio.h **** 
  74:../libDaisy/src/per/gpio.h ****     GPIO() {}
 382              		.loc 11 74 5 is_stmt 1 view .LVU56
 383              	.LBB249:
 384              	.LBB245:
 385              	.LBI225:
  68:../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 386              		.loc 11 68 9 view .LVU57
 387              	.LBB241:
 388              	.LBB237:
 389              	.LBB234:
 390              	.LBI228:
 391              		.loc 9 204 15 view .LVU58
 392              		.loc 9 204 15 is_stmt 0 view .LVU59
 393              	.LBE234:
 394              	.LBE237:
 395              	.LBE241:
 396              	.LBE245:
 397              	.LBE249:
 398              	.LBE325:
 399              	.LBB326:
 400              	.LBI262:
 401              		.loc 11 74 5 is_stmt 1 view .LVU60
 402              	.LBB281:
 403              	.LBB278:
 404              	.LBI264:
  68:../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 405              		.loc 11 68 9 view .LVU61
 406              	.LBB275:
 407              	.LBB272:
 408              	.LBB270:
 409              	.LBI267:
 410              		.loc 9 204 15 view .LVU62
 411              		.loc 9 204 15 is_stmt 0 view .LVU63
 412              	.LBE270:
 413              	.LBE272:
 414              	.LBE275:
 415              	.LBE278:
 416              	.LBE281:
 417              	.LBE326:
 418              	.LBB327:
 419              	.LBI327:
ARM GAS  /tmp/cciHSaAV.s 			page 27


  96:../libDaisy/src/sys/system.h ****     ~System() {}
 420              		.loc 4 96 5 is_stmt 1 view .LVU64
  96:../libDaisy/src/sys/system.h ****     ~System() {}
 421              		.loc 4 96 5 is_stmt 0 view .LVU65
 422              	.LBE327:
 423              	.LBB328:
 424              	.LBI283:
  20:../libDaisy/src/dev/codec_ak4556.h ****     ~Ak4556() {}
 425              		.loc 3 20 5 is_stmt 1 view .LVU66
 426              	.LBB306:
 427              	.LBI284:
 428              		.loc 11 74 5 view .LVU67
 429              	.LBB303:
 430              	.LBB300:
 431              	.LBI286:
  68:../libDaisy/src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 432              		.loc 11 68 9 view .LVU68
 433              	.LBB297:
 434              	.LBB294:
 435              	.LBB292:
 436              	.LBI289:
 437              		.loc 9 204 15 view .LVU69
 438              		.loc 9 204 15 is_stmt 0 view .LVU70
 439              	.LBE292:
 440              	.LBE294:
 441              	.LBE297:
 442              	.LBE300:
 443              	.LBE303:
 444              	.LBE306:
 445              	.LBE328:
 446              	.LBB329:
 447              	.LBI317:
 448              		.loc 12 109 5 is_stmt 1 view .LVU71
 449              		.loc 12 109 5 is_stmt 0 view .LVU72
 450              	.LBE329:
 451              	.LBE334:
 452              	.LBE337:
 453              	.LBE339:
 454              	.LBE341:
 455              		.loc 1 34 1 view .LVU73
 456 002e 5DF8044B 		ldr	r4, [sp], #4
 457              		.cfi_restore 4
 458              		.cfi_def_cfa_offset 0
 459              	.LBB342:
 460              	.LBB340:
 461              	.LBB338:
 462              	.LBB335:
 463              	.LBB330:
 464              	.LBB250:
 465              	.LBB246:
 466              	.LBB242:
 467              	.LBB238:
  69:../libDaisy/src/per/gpio.h ****         {
 468              		.loc 11 69 37 discriminator 1 view .LVU74
 469 0032 C0E90B33 		strd	r3, r3, [r0, #44]
 470              	.LBE238:
 471              	.LBE242:
ARM GAS  /tmp/cciHSaAV.s 			page 28


 472              	.LBE246:
 473              	.LBE250:
 474              	.LBE330:
 475              	.LBB331:
 476              	.LBB282:
 477              	.LBB279:
 478              	.LBB276:
 479              	.LBB273:
 480 0036 C0E91033 		strd	r3, r3, [r0, #64]
 481              	.LBE273:
 482              	.LBE276:
 483              	.LBE279:
 484              	.LBE282:
 485              	.LBE331:
 486              	.LBB332:
 487              	.LBB307:
 488              	.LBB304:
 489              	.LBB301:
 490              	.LBB298:
 491              	.LBB295:
 492 003a C0E91733 		strd	r3, r3, [r0, #92]
 493              	.LBE295:
 494              	.LBE298:
 495              	.LBE301:
 496              	.LBE304:
 497              	.LBE307:
 498              	.LBE332:
 499              	.LBE335:
 500              	.LBE338:
   8:Blink.cpp     **** DaisySeed hardware;
 501              		.loc 1 8 11 discriminator 1 view .LVU75
 502 003e FFF7FEBF 		b	__aeabi_atexit
 503              	.LVL9:
 504              	.L11:
 505 0042 00BF     		.align	2
 506              	.L10:
 507 0044 00000000 		.word	hardware
 508 0048 00000000 		.word	__dso_handle
 509 004c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 510              	.LBE340:
 511              	.LBE342:
 512              		.cfi_endproc
 513              	.LFE2473:
 515              		.section	.init_array,"aw",%init_array
 516              		.align	2
 517 0000 00000000 		.word	_GLOBAL__sub_I_hardware(target1)
 518              		.global	hardware
 519              		.section	.bss.hardware,"aw",%nobits
 520              		.align	2
 523              	hardware:
 524 0000 00000000 		.space	116
 524      00000000 
 524      00000000 
 524      00000000 
 524      00000000 
 525              		.text
 526              	.Letext0:
ARM GAS  /tmp/cciHSaAV.s 			page 29


 527              		.file 13 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 528              		.file 14 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stddef.h"
 529              		.file 15 "/usr/include/newlib/c++/13.2.1/cmath"
 530              		.file 16 "/usr/include/newlib/c++/13.2.1/bits/std_abs.h"
 531              		.file 17 "/usr/include/newlib/c++/13.2.1/cstdlib"
 532              		.file 18 "/usr/include/newlib/c++/13.2.1/cstdint"
 533              		.file 19 "/usr/include/newlib/c++/13.2.1/type_traits"
 534              		.file 20 "/usr/include/newlib/c++/13.2.1/debug/debug.h"
 535              		.file 21 "/usr/include/newlib/c++/13.2.1/cstdarg"
 536              		.file 22 "/usr/include/newlib/c++/13.2.1/cstdio"
 537              		.file 23 "/usr/include/newlib/c++/13.2.1/cstring"
 538              		.file 24 "/usr/include/newlib/c++/13.2.1/bits/predefined_ops.h"
 539              		.file 25 "/usr/include/newlib/sys/_types.h"
 540              		.file 26 "/usr/include/newlib/sys/reent.h"
 541              		.file 27 "/usr/include/newlib/sys/lock.h"
 542              		.file 28 "/usr/include/newlib/c++/13.2.1/bits/stl_pair.h"
 543              		.file 29 "/usr/include/newlib/math.h"
 544              		.file 30 "/usr/include/newlib/stdlib.h"
 545              		.file 31 "/usr/include/newlib/c++/13.2.1/math.h"
 546              		.file 32 "/usr/include/newlib/c++/13.2.1/stdlib.h"
 547              		.file 33 "/usr/include/newlib/c++/13.2.1/arm-none-eabi/thumb/v7e-m+dp/hard/bits/c++config.h"
 548              		.file 34 "../libDaisy/src/util/wav_format.h"
 549              		.file 35 "../libDaisy/src/dev/sr_595.h"
 550              		.file 36 "../libDaisy/src/dev/max11300.h"
 551              		.file 37 "../libDaisy/src/dev/sdram.h"
 552              		.file 38 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdarg.h"
 553              		.file 39 "/usr/include/newlib/stdio.h"
 554              		.file 40 "/usr/include/newlib/string.h"
 555              		.file 41 "<built-in>"
ARM GAS  /tmp/cciHSaAV.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 Blink.cpp
     /tmp/cciHSaAV.s:20     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
     /tmp/cciHSaAV.s:27     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
     /tmp/cciHSaAV.s:27     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
     /tmp/cciHSaAV.s:74     .text.startup.main:00000000 $t
     /tmp/cciHSaAV.s:81     .text.startup.main:00000000 main
     /tmp/cciHSaAV.s:132    .text.startup.main:00000028 $d
     /tmp/cciHSaAV.s:523    .bss.hardware:00000000 hardware
     /tmp/cciHSaAV.s:137    .text.startup._GLOBAL__sub_I_hardware:00000000 $t
     /tmp/cciHSaAV.s:143    .text.startup._GLOBAL__sub_I_hardware:00000000 _GLOBAL__sub_I_hardware
     /tmp/cciHSaAV.s:507    .text.startup._GLOBAL__sub_I_hardware:00000044 $d
     /tmp/cciHSaAV.s:516    .init_array:00000000 $d
     /tmp/cciHSaAV.s:520    .bss.hardware:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed6SetLedEb
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
